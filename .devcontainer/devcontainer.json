{
  "name": "Nexus Home Link - Full Stack Development",
  "dockerComposeFile": "docker-compose.yml",
  "service": "devcontainer",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",
  
  // Features for additional tools
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": true,
      "moby": true
    },
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  // VS Code extensions for optimal development
  "customizations": {
    "vscode": {
      "extensions": [
        // .NET Development
        "ms-dotnettools.csharp",
        "ms-dotnettools.vscode-dotnet-runtime",
        "ms-dotnettools.csdevkit",
        "ms-dotnettools.blazorwasm-companion",
        
        // Vue.js Development
        "Vue.volar",
        "Vue.vscode-typescript-vue-plugin",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        
        // Docker & DevOps
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "redhat.vscode-yaml",
        
        // General Development
        "ms-vscode.vscode-json",
        "formulahendry.auto-rename-tag",
        "christian-kohler.path-intellisense",
        "ms-vscode.vscode-typescript-next",
        "bradlc.vscode-tailwindcss",
        
        // Git & GitHub
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        
        // Testing
        "vitest.explorer",
        "ms-vscode.test-adapter-converter"
      ],
      
      "settings": {
        // Editor settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit"
        },
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        
        // File associations
        "files.associations": {
          "*.vue": "vue"
        },
        
        // TypeScript settings
        "typescript.preferences.importModuleSpecifier": "relative",
        "typescript.suggest.autoImports": true,
        
        // .NET settings
        "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
        "dotnet.inlayHints.enableInlayHintsForParameters": true,
        
        // Tailwind CSS
        "tailwindCSS.includeLanguages": {
          "vue": "html"
        },
        "tailwindCSS.experimental.classRegex": [
          ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
        ]
      }
    }
  },

  // Environment variables
  "containerEnv": {
    "ASPNETCORE_ENVIRONMENT": "Development",
    "DOTNET_ENVIRONMENT": "Development",
    "NODE_ENV": "development",
    "VITE_API_BASE_URL": "http://localhost:5000/api"
  },

  // Port forwarding
  "forwardPorts": [3000, 5000, 7026, 7443],
  "portsAttributes": {
    "3000": {
      "label": "Frontend (Vue.js)",
      "onAutoForward": "notify"
    },
    "5000": {
      "label": "Backend API (HTTP)",
      "onAutoForward": "notify"
    },
    "7026": {
      "label": "Backend API (HTTPS)",
      "onAutoForward": "notify"
    },
    "7443": {
      "label": "Aspire Dashboard",
      "onAutoForward": "notify"
    }
  },

  // Post-create commands to set up the environment
  "postCreateCommand": "bash .devcontainer/setup.sh",
  
  // Lifecycle scripts
  "postStartCommand": "bash .devcontainer/start.sh",
  "postAttachCommand": "bash .devcontainer/attach.sh",

  // User configuration
  "remoteUser": "vscode",
  "remoteEnv": {
    "PATH": "${containerEnv:PATH}:/home/vscode/.dotnet/tools"
  },

  // Mount Docker socket for Docker-in-Docker
  "mounts": [
    "source=/var/run/docker-host.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Security
  "privileged": true,
  "init": true
}
