version: '3.8'

services:
  # Frontend - Vue 3 Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nexus-home-link-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://backend:80/api
      - VITE_TMDB_API_KEY=${TMDB_API_KEY:-}
      - VITE_TMDB_ACCESS_TOKEN=${TMDB_ACCESS_TOKEN:-}
      - VITE_ENABLE_MOCK_DATA=${ENABLE_MOCK_DATA:-true}
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nexus-network

  # Backend - .NET API
  backend:
    build:
      context: ./backend/src
      dockerfile: NexusHomeLink.Api/Dockerfile
    container_name: nexus-home-link-backend
    ports:
      - "5000:80"
      - "7443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nexus123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=NexusHomeLink;User Id=sa;Password=NexusHomeLink123!;TrustServerCertificate=true;
      - Redis__ConnectionString=redis:6379
    depends_on:
      - sqlserver
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./certs:/https:ro
    networks:
      - nexus-network

  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: nexus-home-link-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=NexusHomeLink123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P NexusHomeLink123! -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - nexus-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nexus-home-link-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - nexus-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: nexus-home-link-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-network

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  nexus-network:
    driver: bridge
