# All-in-one Dockerfile for Nexus Home Link
# This creates a single image with frontend + backend + database + cache

FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 80

# Install Node.js and pnpm
RUN apt-get update && apt-get install -y curl && \
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g pnpm && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install SQL Server
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y mssql-server && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Redis
RUN apt-get update && apt-get install -y redis-server && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install nginx
RUN apt-get update && apt-get install -y nginx && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy frontend source
COPY frontend/ /app/frontend/
WORKDIR /app/frontend

# Install frontend dependencies and build
RUN pnpm install && pnpm build

# Copy backend source
COPY backend/src/ /app/backend/
WORKDIR /app/backend

# Copy nginx config
COPY nginx-all-in-one.conf /etc/nginx/sites-available/default

# Copy startup script
COPY start-all.sh /app/start-all.sh
RUN chmod +x /app/start-all.sh

# Create data directories
RUN mkdir -p /var/opt/mssql/data /var/opt/mssql/log /var/opt/mssql/secrets

# Set permissions
RUN chown -R mssql:mssql /var/opt/mssql

# Expose ports
EXPOSE 80 1433 6379

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

# Start all services
CMD ["/app/start-all.sh"]
